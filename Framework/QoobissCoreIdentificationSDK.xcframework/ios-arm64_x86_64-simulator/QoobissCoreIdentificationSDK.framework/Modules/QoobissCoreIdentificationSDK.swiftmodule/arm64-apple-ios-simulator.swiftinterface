// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target arm64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name QoobissCoreIdentificationSDK
import AVFoundation
import CoreImage.CIFilterBuiltins
import Combine
import CoreImage
import CoreML
import CoreMedia
import CoreVideo
import CryptoKit
import DeveloperToolsSupport
import Foundation
import Photos
@_exported import QoobissCoreIdentificationSDK
import Swift
import SwiftUI
import SwiftUICore
import UIKit
import Vision
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct Log {
  public init(level: QoobissCoreIdentificationSDK.Log.Level)
  public enum Level : Swift.Int {
    case none
    case debug
    case error
    case info
    case verbose
    public init?(rawValue: Swift.Int)
    public typealias RawValue = Swift.Int
    public var rawValue: Swift.Int {
      get
    }
  }
}
public struct IdentificationFlow {
  public static func startFlow(apiKey: Swift.String, onMessage: @escaping (Swift.String) -> Swift.Void, onComplete: @escaping (QoobissCoreIdentificationSDK.CompletionResult) -> Swift.Void) -> some SwiftUICore.View
  
}
public enum CompletionResult {
  case success(message: Swift.String)
  case failure(error: QoobissCoreIdentificationSDK.OntraceError)
  case cancel(error: QoobissCoreIdentificationSDK.OntraceError)
}
public struct OntraceError : Swift.Error {
}
extension QoobissCoreIdentificationSDK.Log.Level : Swift.Equatable {}
extension QoobissCoreIdentificationSDK.Log.Level : Swift.Hashable {}
extension QoobissCoreIdentificationSDK.Log.Level : Swift.RawRepresentable {}
