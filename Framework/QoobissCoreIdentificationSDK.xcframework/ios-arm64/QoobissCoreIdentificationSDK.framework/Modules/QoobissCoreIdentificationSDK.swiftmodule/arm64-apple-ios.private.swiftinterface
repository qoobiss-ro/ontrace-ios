// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios14.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name QoobissCoreIdentificationSDK
import AVFoundation
import CoreImage.CIFilterBuiltins
import Combine
import CoreImage
import CoreML
import CoreMedia
import CoreVideo
import CryptoKit
import DeveloperToolsSupport
import Foundation
import Photos
@_exported import QoobissCoreIdentificationSDK
import Swift
import SwiftUI
import SwiftUICore
import UIKit
import Vision
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public typealias StringCallback = (Swift.String) -> Swift.Void
public typealias ResultCallback = (QoobissCoreIdentificationSDK.OntraceCompletionResult) -> Swift.Void
public struct IdentificationFlow {
  public static func startFlowNative(apiKey: Swift.String, onMessage: @escaping QoobissCoreIdentificationSDK.StringCallback, onCompleteResult: QoobissCoreIdentificationSDK.ResultCallback? = nil) -> some SwiftUICore.View
  
  public static func startFlowCrossPlatform(apiKey: Swift.String, onMessage: @escaping QoobissCoreIdentificationSDK.StringCallback, onComplete: @escaping QoobissCoreIdentificationSDK.StringCallback) -> some SwiftUICore.View
  
}
@objc public class OntraceCompletionResult : ObjectiveC.NSObject, Swift.Codable {
  public var requestId: Swift.String
  public var message: Swift.String?
  public var error: Swift.String?
  public var identificationResult: QoobissCoreIdentificationSDK.IdentificationResult?
  public init(requestId: Swift.String, message: Swift.String?, error: Swift.String?, identificationResult: QoobissCoreIdentificationSDK.IdentificationResult?)
  @objc deinit
  public func encode(to encoder: any Swift.Encoder) throws
  required public init(from decoder: any Swift.Decoder) throws
}
public enum IdentificationResult : Swift.Int, Swift.Codable {
  case success
  case failure
  case cancel
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
public struct OntraceError : Swift.Error, Swift.Codable {
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
extension QoobissCoreIdentificationSDK.IdentificationResult : Swift.Equatable {}
extension QoobissCoreIdentificationSDK.IdentificationResult : Swift.Hashable {}
extension QoobissCoreIdentificationSDK.IdentificationResult : Swift.RawRepresentable {}
